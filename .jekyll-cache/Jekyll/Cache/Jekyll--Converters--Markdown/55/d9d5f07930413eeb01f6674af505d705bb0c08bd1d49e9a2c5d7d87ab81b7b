I"S<h1 id="1-병행성-개요">1. 병행성: 개요</h1>
<ul>
  <li>멀티 쓰레드 프로그램은 하나 이상의 실행 지점(독립적으로 불러 들여지고 실행될 수 있는 여러 개의 PC 값)을 가지고 있다.</li>
  <li>멀티 쓰레드를 이해하는 다른 방법은 각 쓰레드가 프로세스와 매우 유사하지만, 차이가 있다면 쓰레드들은 주소 공간을 공유하기 때문에 동일한 값에 접근할 수 있다는 것이다.</li>
  <li>쓰레드는 어디서 명령어들을 불러 들일지 추적하는 프로그램 카운터(PC)와 연산을 위한 레지스터들을 가지고 있다.</li>
  <li>두 개 이상의 쓰레드가 하나의 프로세서에서 실행 중이라면 <strong>문맥 교환</strong>이 이루어져야 한다.
    <ul>
      <li>문맥 전환을 할 때 프로세스는 자신의 상태를 <strong>프로세스 제어 블럭(process control block, PCB)</strong>에 저장하듯이 쓰레드는 <strong>쓰레드 제어 블럭(thread control block, TCB)</strong>에 저장한다.</li>
      <li>가장 큰 차이 중 하나는 프로세스의 경우와 달리 쓰레드 간의 문맥 교환에서는 주소 공간을 그대로 사용한다.</li>
      <li>쓰레드와 프로세스의 또 다른 차이는 쓰레드는 자신만의 스택이 존재한다.</li>
    </ul>
  </li>
</ul>

<h2 id="11-왜-쓰레드를-사용하는가">1.1 왜 쓰레드를 사용하는가?</h2>
<ul>
  <li>쓰레드를 사용해야하는 2가지 주요 이유가 있다.
    <ol>
      <li><strong>병렬 처리(parallelism)</strong></li>
    </ol>
  </li>
</ul>
:ET