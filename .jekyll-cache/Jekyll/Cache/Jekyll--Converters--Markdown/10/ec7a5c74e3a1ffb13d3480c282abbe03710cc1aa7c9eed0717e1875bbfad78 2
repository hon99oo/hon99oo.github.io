I"C<h1 id="boj">BOJ</h1>

<h2 id="그리디-2012-등수-매기기">그리디 2012 등수 매기기</h2>
<p><a href="https://www.acmicpc.net/problem/2012">문제로 이동!</a></p>

<h2 id="문제">문제</h2>

<p>2007년 KOI에 N명의 학생들이 참가하였다. 경시일 전날인 예비소집일에, 모든 학생들은 자신이 N명 중에서 몇 등을 할 것인지 예상 등수를 적어서 제출하도록 하였다.</p>

<p>KOI 담당조교로 참가한 김진영 조교는 실수로 모든 학생의 프로그램을 날려 버렸다. 1등부터 N등까지 동석차 없이 등수를 매겨야 하는 김 조교는, 어쩔 수 없이 각 사람이 제출한 예상 등수를 바탕으로 임의로 등수를 매기기로 했다.</p>

<table>
  <tbody>
    <tr>
      <td>자신의 등수를 A등으로 예상하였는데 실제 등수가 B등이 될 경우, 이 사람의 불만도는 A와 B의 차이 (</td>
      <td>A - B</td>
      <td>)로 수치화할 수 있다. 당신은 N명의 사람들의 불만도의 총 합을 최소로 하면서, 학생들의 등수를 매기려고 한다.</td>
    </tr>
  </tbody>
</table>

<p>각 사람의 예상 등수가 주어졌을 때, 김 조교를 도와 이러한 불만도의 합을 최소로 하는 프로그램을 작성하시오.</p>

<h2 id="입력">입력</h2>

<p>첫째 줄에 자연수 N이 주어진다. (1 ≤ N ≤ 500,000) 둘째 줄부터 N개의 줄에 걸쳐 각 사람의 예상 등수가 순서대로 주어진다. 예상 등수는 500,000 이하의 자연수이다.</p>

<h2 id="예제-입력">예제 입력</h2>
<p>입력: 5 1 5 3 1 2, 출력: 3<br /></p>

<h2 id="풀이">풀이</h2>
<blockquote>
  <p>정렬 이후 abs 함수를 이용해서 순차별로 계산하면 해결할 수 있는 간단한 문제이다.</p>
</blockquote>

<h3 id="solution">solution</h3>
<ol>
  <li>학생들의 예상 점수가 저장되어 있는 리스트를 오름차순으로 정렬한다.</li>
  <li>학생들의 점수를 차례대로 1,2,3 ~ 순서로 빼주고 절대값 처리를 해준다.</li>
</ol>

<h2 id="코드">코드</h2>

<figure class="highlight"><pre><code class="language-python" data-lang="python">    <span class="k">def</span> <span class="nf">solution</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">expectations</span><span class="p">):</span>
        <span class="n">expectations</span><span class="p">.</span><span class="n">sort</span><span class="p">()</span>
        <span class="n">result</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
            <span class="n">result</span> <span class="o">+=</span> <span class="nb">abs</span><span class="p">(</span><span class="n">expectations</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">-</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">))</span>
        <span class="k">return</span> <span class="n">result</span>
    
    
    <span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
        <span class="n">n</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
        <span class="n">expectations</span> <span class="o">=</span> <span class="p">[</span><span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="p">)]</span>
        <span class="k">print</span><span class="p">(</span><span class="n">solution</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">expectations</span><span class="p">))</span></code></pre></figure>
:ET