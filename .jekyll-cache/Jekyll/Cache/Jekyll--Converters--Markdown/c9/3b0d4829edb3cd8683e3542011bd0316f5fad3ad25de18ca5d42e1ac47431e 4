I"I!<h1 id="boj">BOJ</h1>

<h2 id="이진-탐색-2473-세-용액">이진 탐색 2473 세 용액</h2>
<p><a href="https://www.acmicpc.net/problem/2473">문제로 이동!</a></p>

<h2 id="문제">문제</h2>

<p>KOI 부설 과학연구소에서는 많은 종류의 산성 용액과 알칼리성 용액을 보유하고 있다. 각 용액에는 그 용액의 특성을 나타내는 하나의 정수가 주어져있다.  산성 용액의 특성값은 1부터 1,000,000,000까지의 양의 정수로 나타내고, 알칼리성 용액의 특성값은 -1부터 -1,000,000,000까지의 음의 정수로 나타낸다.</p>

<p>같은 양의 세 가지 용액을 혼합한 용액의 특성값은 혼합에 사용된 각 용액의 특성값의 합으로 정의한다. 이 연구소에서는 같은 양의 세 가지 용액을 혼합하여 특성값이 0에 가장 가까운 용액을 만들려고 한다.</p>

<p>예를 들어, 주어진 용액들의 특성값이 [-2, 6, -97, -6, 98]인 경우에는 특성값이 -97와 -2인 용액과 특성값이 98인 용액을 혼합하면 특성값이 -1인 용액을 만들 수 있고, 이 용액이 특성값이 0에 가장 가까운 용액이다. 참고로, 세 종류의 알칼리성 용액만으로나 혹은 세 종류의 산성 용액만으로 특성값이 0에 가장 가까운 혼합 용액을 만드는 경우도 존재할 수 있다.</p>

<p>산성 용액과 알칼리성 용액이 주어졌을 때, 이 중 같은 양의 세 개의 서로 다른 용액을 혼합하여 특성값이 0에 가장 가까운 용액을 만들어내는 세 용액을 찾는 프로그램을 작성하시오.</p>

<h2 id="입력">입력</h2>

<p>첫째 줄에는 전체 용액의 수 N이 입력된다. N은 3 이상 5,000 이하의 정수이다. 둘째 줄에는 용액의 특성값을 나타내는 N개의 정수가 빈칸을 사이에 두고 주어진다. 이 수들은 모두 -1,000,000,000 이상 1,000,000,000 이하이다. N개의 용액들의 특성값은 모두 다르고, 산성 용액만으로나 알칼리성 용액만으로 입력이 주어지는 경우도 있을 수 있다.</p>

<h2 id="예제-입력">예제 입력</h2>

<figure class="highlight"><pre><code class="language-python" data-lang="python">    <span class="s">"""
    case 1:
    입력
    5
    -2 6 -97 -6 98
    출력
    -97 -2 98
    """</span></code></pre></figure>

<h2 id="풀이">풀이</h2>
<blockquote>
  <p>2467번의 용액과 비슷한 문제이다. 하지만 이는 세가지 수의 합이므로 기준 값을 하나 설정하고 나머지 값들을 two pointer를 활용해 해결한다. 우선 반복문을 돌며 가장 작은 값부터 기준 값으로 설정한다.
기준 값 + 1과 가장 큰 값인 N-1 을 start와 end 인자로 설정한다. 이후 start와 end의 폭을 좁혀가며 (기준 값 + start + end)의 절대값과 기존의 정답이 되는 최소 값의 절대값과 비교하여 작다면 정답 리스트에 저장해둔다.
이후 현재 값의 합이 0보다 작다면 start를 +1, 0보다 크다면 end를 -1 해준다. start와 end가 만나 while문을 탈출하게 되면 기준값을 하나 옮겨주고 반복한다.</p>
</blockquote>

<h2 id="코드">코드</h2>

<figure class="highlight"><pre><code class="language-python" data-lang="python">    <span class="k">def</span> <span class="nf">two_pointer</span><span class="p">(</span><span class="n">array</span><span class="p">,</span> <span class="n">basis</span><span class="p">,</span> <span class="n">start</span><span class="p">,</span> <span class="n">end</span><span class="p">):</span>
        <span class="k">global</span> <span class="n">value</span>
        <span class="k">global</span> <span class="n">answer</span>
        <span class="k">while</span> <span class="n">start</span> <span class="o">&lt;</span> <span class="n">end</span><span class="p">:</span>
            <span class="n">x</span> <span class="o">=</span> <span class="n">array</span><span class="p">[</span><span class="n">basis</span><span class="p">]</span> <span class="o">+</span> <span class="n">array</span><span class="p">[</span><span class="n">start</span><span class="p">]</span> <span class="o">+</span> <span class="n">array</span><span class="p">[</span><span class="n">end</span><span class="p">]</span>
            <span class="k">if</span> <span class="nb">abs</span><span class="p">(</span><span class="n">value</span><span class="p">)</span> <span class="o">&gt;</span> <span class="nb">abs</span><span class="p">(</span><span class="n">x</span><span class="p">):</span>
                <span class="n">value</span> <span class="o">=</span> <span class="n">x</span>
                <span class="n">answer</span> <span class="o">=</span> <span class="p">[</span><span class="n">array</span><span class="p">[</span><span class="n">basis</span><span class="p">],</span><span class="n">array</span><span class="p">[</span><span class="n">start</span><span class="p">],</span><span class="n">array</span><span class="p">[</span><span class="n">end</span><span class="p">]]</span>
            <span class="k">if</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">:</span>
                <span class="n">start</span> <span class="o">+=</span> <span class="mi">1</span>
            <span class="k">elif</span> <span class="n">x</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
                <span class="n">end</span> <span class="o">-=</span> <span class="mi">1</span>
            <span class="k">else</span><span class="p">:</span>
                <span class="n">answer</span> <span class="o">=</span> <span class="p">[</span><span class="n">array</span><span class="p">[</span><span class="n">basis</span><span class="p">],</span><span class="n">array</span><span class="p">[</span><span class="n">start</span><span class="p">],</span><span class="n">array</span><span class="p">[</span><span class="n">end</span><span class="p">]]</span>
                <span class="k">return</span> <span class="bp">True</span>
        <span class="k">return</span> <span class="bp">False</span>
    
    
    <span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
        <span class="n">n</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
        <span class="n">array</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nb">input</span><span class="p">().</span><span class="n">split</span><span class="p">()))</span>
        <span class="n">array</span><span class="p">.</span><span class="n">sort</span><span class="p">()</span>
        <span class="n">value</span> <span class="o">=</span> <span class="n">array</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="n">array</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="n">array</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>
        <span class="n">answer</span> <span class="o">=</span> <span class="p">[</span><span class="n">array</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="n">array</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="n">array</span><span class="p">[</span><span class="mi">2</span><span class="p">]]</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
            <span class="k">if</span> <span class="n">two_pointer</span><span class="p">(</span><span class="n">array</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">):</span>
                <span class="k">break</span>
        <span class="k">print</span><span class="p">(</span><span class="o">*</span><span class="n">answer</span><span class="p">)</span></code></pre></figure>
:ET