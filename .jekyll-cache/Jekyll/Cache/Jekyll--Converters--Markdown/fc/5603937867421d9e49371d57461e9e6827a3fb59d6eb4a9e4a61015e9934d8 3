I".<h1 id="프로그래머스programmers-코딩테스트-연습">프로그래머스(Programmers) 코딩테스트 연습</h1>

<h2 id="level1-해시-완주하지-못한-선수-파이썬python-풀이">Level1 해시 완주하지 못한 선수 파이썬(Python) 풀이</h2>

<p><a href="https://programmers.co.kr/learn/courses/30/lessons/42576">풀이로 이동!</a></p>

<h2 id="문제풀이">문제풀이</h2>
<blockquote>
  <p>딕셔너리에 선수의 이름을 key값으로, 중복된 선수의 이름을 체크하는 count를 value값으로 만들어준 뒤, 
완주한 선수의 목록을 반복문을 돌며 count를 1씩 줄이며 마지막으로 남아있는 선수를 출력하면 된다.
파이썬에서 딕셔너리는 해시테이블이라고 볼 수 있다.</p>
</blockquote>

<h3 id="solution2solved">solution2(solved)</h3>
<ol>
  <li>딕셔너리 변수를 하나 지정해준다.</li>
  <li>참가자들의 반복문을 돌며 딕셔너리에 key값이 존재하지 않다면 value 0을, 존재한다면 value +1로 설정해준다.</li>
  <li>완주자들의 반복문을 돌며 딕셔너리에서 key값을 조회하며 value를 -1씩 해준다.</li>
  <li>반복문을 돌며 0보다 큰 값을 출력해준다.</li>
</ol>

<h3 id="solution3solved">solution3(solved)</h3>
<blockquote>
  <p>hash값을 아주 잘 이용한 case여서 배워두면 유용하게 사용할 수 있을 것 같다.</p>
</blockquote>

<ol>
  <li>딕셔너리 변수를 하나 지정해준다.</li>
  <li>참가자들의 반복문을 돌며 딕셔너리 key값으로 참가자의 이름에 해당하는 hash값, value에는 참가자의 이름을 저장해준다.</li>
  <li>추가적으로 해당 hash값을 모두 더하여 저장하는 temp 변수를 만든다.</li>
  <li>완주자의 반복문을 돌며 완주자의 이름에 해당하는 hash값을 temp에서 계속 빼간다.</li>
  <li>이후 temp의 남아있는 값으로 딕셔너리의 key값을 조회한다.</li>
</ol>

<h2 id="새로-알게된-문법">새로 알게된 문법</h2>
<blockquote>
  <p>solution1은 시간초과로 문제를 해결하지 못하였는데 그 이유는 딕셔너리 컴프리헨션에서 사용한 count가 O(n) 시간을 가지고 있기 때문이다.</p>
</blockquote>

<p>리스트 컴프리헨션만 존재하는 줄 알았지만, 컴프리헨션은 딕셔너리에서도 적용 가능했다.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python">    <span class="n">a</span> <span class="o">=</span> <span class="p">{</span><span class="n">p</span><span class="p">:</span><span class="n">participant</span><span class="p">.</span><span class="n">count</span><span class="p">(</span><span class="n">p</span><span class="p">)</span> <span class="k">for</span> <span class="n">p</span> <span class="ow">in</span> <span class="n">participant</span><span class="p">}</span></code></pre></figure>

<p>key:value 형식으로 저장한다.</p>

<h2 id="코드">코드</h2>

<figure class="highlight"><pre><code class="language-python" data-lang="python">    <span class="k">def</span> <span class="nf">solution</span><span class="p">(</span><span class="n">array</span><span class="p">,</span> <span class="n">commands</span><span class="p">):</span>
        <span class="n">answer</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="k">for</span> <span class="n">command</span> <span class="ow">in</span> <span class="n">commands</span><span class="p">:</span>
            <span class="n">answer</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="nb">sorted</span><span class="p">(</span><span class="n">array</span><span class="p">[</span><span class="n">command</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="mi">1</span><span class="p">:</span><span class="n">command</span><span class="p">[</span><span class="mi">1</span><span class="p">]])[</span><span class="n">command</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>
        <span class="k">return</span> <span class="n">answer</span>
    
    <span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
        <span class="n">array</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">4</span><span class="p">]</span>
        <span class="n">commands</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">3</span><span class="p">]]</span>
        <span class="k">print</span><span class="p">(</span><span class="n">solution</span><span class="p">(</span><span class="n">array</span><span class="p">,</span> <span class="n">commands</span><span class="p">))</span></code></pre></figure>
:ET