I"5<h1 id="part3-제어문">Part3 제어문</h1>

<h2 id="if-조건문">if 조건문</h2>
<p>조건식의 연산 결과에 따라 블록 내부 문장의 실해 여부를 결정할 수 있다.</p>
<ul>
  <li>if 문</li>
  <li>if - else 문</li>
  <li>if - else if - else 문</li>
</ul>

<p><br /><br /></p>
<h2 id="논리-연산자">논리 연산자</h2>
<p>논리 연산자의 피연산자는 블린 타입만 사용할 수 있다. 결과는 불린값이다.</p>
<ul>
  <li>
    <table>
      <tbody>
        <tr>
          <td>OR :</td>
          <td> </td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>AND : &amp;&amp;</li>
  <li>NOT : !</li>
  <li>EXCLUSIVE-Or : ^</li>
</ul>

<p><br /><br /></p>
<h2 id="삼항-연산자">삼항 연산자</h2>
<ul>
  <li>조건식 ? 피연산자1 : 피연산자2
    <ul>
      <li>조건식의 결과가 true 라면 결과는 피연산자1</li>
      <li>조건식의 결과가 false 라면 결과는 피연산자2</li>
    </ul>
  </li>
</ul>

<p><br /><br /></p>
<h2 id="switch문">switch문</h2>
<p>switch문은 어떤 변수의 값에 따라서 문장을 실행할 수 있도록 하는 제어문이다.</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">switch</span><span class="p">(</span><span class="err">변수</span><span class="p">){</span>
        <span class="k">case</span> <span class="err">값</span><span class="mi">1</span> <span class="p">:</span> 
            <span class="err">실행문</span><span class="p">;</span> 
            <span class="k">break</span><span class="p">;</span>
        <span class="k">case</span> <span class="err">값</span><span class="mi">2</span> <span class="p">:</span> 
            <span class="err">실행문</span><span class="p">;</span> 
            <span class="k">break</span><span class="p">;</span>  
        <span class="n">default</span><span class="p">;</span>    
    <span class="p">}</span></code></pre></figure>

<ul>
  <li>break를 쓰지 않으면 value값이 값1일 경우 값1, 값2, default를 모두 실행한다.</li>
  <li>JDK7 이후에는 문자열 타입의 변수도 가능함</li>
</ul>

<p><br /><br /></p>
<h2 id="while문">while문</h2>
<p>조건문의 실행 결과가 true일 동안 반복해서 실행한다.</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">while</span><span class="p">(</span><span class="err">조건문</span><span class="p">){</span>
        <span class="err">실행문</span><span class="p">;</span> 
    <span class="p">}</span></code></pre></figure>

<p><br /><br /></p>
<h2 id="do-while문">do while문</h2>
<p>while 문의 경우 조건이 만족되지 않을 때 실행되지 않지만, do while 문은 무조건 한번은 수행 된다.</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby">   <span class="k">do</span><span class="p">{</span>
        <span class="err">실행문</span><span class="p">;</span>
    <span class="p">}</span><span class="k">while</span><span class="p">(</span><span class="err">조건문</span><span class="p">);</span></code></pre></figure>

<ul>
  <li>실행문을 한번은 실행하고 싶을 경우에 사용됨</li>
</ul>

<p><br /><br /></p>
<h2 id="for-반복문">for 반복문</h2>
<p>for 구문 자체에 변수 초기화, 조건식, 증감식이 한줄로 표현됨</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby">    <span class="k">for</span><span class="p">(</span><span class="err">초기화식</span><span class="p">;</span> <span class="err">조건식</span><span class="p">;</span> <span class="err">증감식</span><span class="p">){</span>
        <span class="err">실행문</span><span class="p">;</span>
        <span class="err">실행문</span><span class="p">;</span>
    <span class="p">}</span></code></pre></figure>

:ET