I"/	<h1 id="part5-io">Part5 IO</h1>

<h2 id="자바io">자바IO</h2>
<p>입출력을 위한 인터페이스와 클래스들</p>
<ul>
  <li>자바 IO는 크게 byte단위 입출력과 문자 단위 이출력 클래스로 나뉜다.
    <ul>
      <li>byte단위 입출력클래스는 모두 InputStream과 OutputStream이라는 추상클래스를 상속받아 만들어진다.</li>
      <li>문자(char)단위 입출력클래스는 모두 Reader와 Writer라는 추상클래스를 상속받아 만들어진다.</li>
    </ul>
  </li>
  <li>4가지 추상클래스(InputStream, OutputStreamReader,Reader,Writer)를 받아들이는 생성자가 있다면, 다양한 입출력방법을 제공하는 클래스다.</li>
  <li>4가지 클래스를 받아들이는 생성자가 없다면, 어디로부터 입력받을 것인지, 어디에 쓸것인지를 나타내는 클래스다.</li>
  <li>파일로부터 입력받고 쓰기 위한 클래스 : FileInputStream, FileOutputStream, FileReader, FileWriter</li>
  <li>배열로부터 입력받고 쓰기 위한 클래스 : ByteArrayInputStream, ByteArrayOutputStream, CharReader, CharWriter
    <ul>
      <li>해당 클래스들은 어디로부터, 어디에라는 대상을 지정할 수 있는 IO클래스다. 이런 클래스를 장식대상 클래스라고 한다.</li>
    </ul>
  </li>
  <li>DataInputStream, DataOutputStream같은 클래스를 보면 다양한 데이터 형을 입력받고 출력한다.</li>
  <li>PrintWriter는 다양하게 한줄 입력받는 readLine() 메소드를 가진다.</li>
  <li>BufferedReader는 한줄 입력받는 readLine() 메소드를 가진다.
    <ul>
      <li>이런 클래스들은 다양한 방식으로 입력하고, 출력하는 기능을 제공한다. 이런 클래스를 장식하는 클래스라고 한다.</li>
    </ul>
  </li>
</ul>

<h2 id="byte-단위-입출력">Byte 단위 입출력</h2>

<h2 id="byte-단위-입출력-심화">Byte 단위 입출력 심화</h2>

<h2 id="다양한-타입의-출력">다양한 타입의 출력</h2>

<h2 id="다양한-타입의-입력">다양한 타입의 입력</h2>

<h2 id="char-단위-입출력console">Char 단위 입출력(Console)</h2>

<h2 id="char-단위-입출력file">Char 단위 입출력(File)</h2>

<h1 id="part6-어노테이션">Part6 어노테이션</h1>

<h2 id="어노테이션">어노테이션</h2>
:ET