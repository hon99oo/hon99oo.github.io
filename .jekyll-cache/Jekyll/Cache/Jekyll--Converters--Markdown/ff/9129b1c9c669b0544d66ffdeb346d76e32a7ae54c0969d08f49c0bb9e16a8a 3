I"<h1 id="boj">BOJ</h1>

<h2 id="그리디-20044-project-teams">그리디 20044 Project Teams</h2>
<p><a href="https://www.acmicpc.net/problem/20044">문제로 이동!</a></p>

<h2 id="문제">문제</h2>

<p>코딩 프로젝트 수업을 가르치는 수찬이는 프로젝트 팀을 가능하면 공정하게 구성하려고 한다. 프로젝트 팀 하나는 두 명의 학생으로 구성되는데, 각 학생들의 코딩 역량은 모두 다르다. 각 학생은 한 팀의 팀원이어야 한다. 공정성을 높이기 위해 수찬이는 팀원 코딩 역량의 합을 최대한 일정하게 유지하려고 한다. 학생들이 코딩 역량이 주어졌을 때 수찬이가 팀을 구성하는데 도움이 되는 프로그램을 작성하라.</p>

<table>
  <tbody>
    <tr>
      <td>문제를 간단하게 하기 위해, 학생 수는 2n이라 가정하자 (n은 양의 정수). 각 학생 si의 코딩 역량은 양의 정수 w(si)로 나타내면 한 i번째 팀 Gi의 코딩 역량은 w(Gi) = ∑s∈Giw(s)로 나타낼 수 있다. 작성할 프로그램 목적은 Sm = min{w(Gi)</td>
      <td>1 ≤ i ≤ n}이 최대화되도록 n개의 팀 G1, G2, …, Gn 을 구성하고 이때 Sm을 출력하는 것이다.</td>
    </tr>
  </tbody>
</table>

<p>예를 들어, 학생들의 코딩 역량이 {1, 7, 5, 8}로 주어졌다면 (8, 1), (7, 5)로 2개의 조를 짤 수 있으며 프로그램은 9를 출력해야 한다.</p>

<h2 id="입력">입력</h2>

<p>입력은 표준입력을 사용한다. 입력의 첫 번째 행에는 팀 수를 나타내는 양의 정수 n(1 ≤ n ≤ 5,000)이 주어진다. 그 다음 행에 학생 si 의 코딩 역량 w(si)를 나타내는 2n개의 양의 정수가 공백으로 분리되어 주어진다 (1 ≤ w(si) ≤ 100,000). 학생들의 코딩 역량은 모두 다르다. 즉, i ≠ j이면 w(si) ≠ w(sj)이다.</p>

<h2 id="예제-입력">예제 입력</h2>
<p>입력: 2 [1, 7, 5, 8], 출력: 9<br />
입력: 3 [1, 7, 3, 5, 9, 2], 출력: 8<br /></p>

<h2 id="풀이">풀이</h2>
<blockquote>
  <p>정렬 후 양 index마다 양 끝을 더한 뒤 최소값을 출력하면 된다.</p>
</blockquote>

<h3 id="solution">solution</h3>
<ol>
  <li>정렬 후 양 index마다 양 끝을 더한 뒤 최소값을 출력하면 된다.</li>
</ol>

<h2 id="코드">코드</h2>

<figure class="highlight"><pre><code class="language-python" data-lang="python">    <span class="k">def</span> <span class="nf">solution</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">students</span><span class="p">):</span>
        <span class="n">students</span><span class="p">.</span><span class="n">sort</span><span class="p">()</span>
        <span class="n">result</span> <span class="o">=</span> <span class="nb">min</span><span class="p">([</span><span class="n">students</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">+</span><span class="n">students</span><span class="p">[(</span><span class="n">n</span><span class="o">*</span><span class="mi">2</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="o">-</span><span class="n">i</span><span class="p">]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="p">)])</span>
        <span class="k">return</span> <span class="n">result</span>
    
    
    <span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
        <span class="n">n</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
        <span class="n">students</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nb">input</span><span class="p">().</span><span class="n">split</span><span class="p">()))</span>
        <span class="k">print</span><span class="p">(</span><span class="n">solution</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">students</span><span class="p">))</span></code></pre></figure>
:ET