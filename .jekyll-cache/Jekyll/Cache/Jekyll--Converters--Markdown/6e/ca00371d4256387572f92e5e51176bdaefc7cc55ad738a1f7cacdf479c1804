I"N<h1 id="1-우리의-코드는-컴퓨터가-어떻게-해석하고-실행할까">1. 우리의 코드는 컴퓨터가 어떻게 해석하고 실행할까?</h1>

<p>우리는 코드를 작성한다. 그리고 실행한다. 컴퓨터는 우리가 작성한 코드를 해석하고 명령어들을 실행한다. 컴퓨터는 어떤 과정을 통해서 우리의 코드를 해석하고 실행할까? 간단한 그림을 그려보겠다.</p>

<p><img src="../../assets/img/csetc/02/img.png" width="100%" height="100%" /></p>

<p>그림을 보면 우리의 코드는 크게 네가지의 스텝으로 나누어 프로세서에 의해 실행된다.</p>
<ol>
  <li>코드 작성</li>
  <li>디스크에 저장</li>
  <li>실행시 코드가 디스크에서 메모리로 올라감</li>
  <li>프로세서에서 메모리의 명령어들을 읽어와서 수행함</li>
</ol>

<h1 id="2-우리의-궁극적인-목적은">2. 우리의 궁극적인 목적은?</h1>
<p>우리의 궁극적인 목적은 우리의 코드가 실행되는 원리를 이해하여 코드의 병목을 줄이고 코드를 최적화하는 것이다. 이를 위해서 우리는 우리의 코드가 만들어낸 프로세스를 실행 및 관리하는 운영체제를
이해하고 있어야 한다(물론 운영체제를 이해하는 이유가 코드의 최적화만 있는 것은 아니다). 그렇다면 운영체제는 어떻게 프로세스를 관리할까? 운영체제의 시스템과 하드웨어의 도움을 통해서 관리한다.
즉, 컴퓨터 구조를 이해하고 있어야지 운영체제가 하드웨어의 어떤 도움을 받아 프로세스를 관리하는지 이해할 수 있다.</p>

<p>그렇기 때문에 우리는 컴퓨터 구조를 먼저 이해하고 운영체제를 공부한다.</p>

<h1 id="3-우리의-코드는-실제로-어떤-절차를-통해-해석-되는가">3. 우리의 코드는 실제로 어떤 절차를 통해 해석 되는가?</h1>
<p>컴퓨터 구조를 이해하기 전에, 실제로 우리의 코드가 어떤 절차를 통해 프로세서가 해석을 할까? 간단한 그림을 그려보겠다.
<img src="../../assets/img/csetc/02/img_1.png" width="100%" height="100%" /></p>

<p>위의 그림과 같은 절차로 우리의 코드는 변경을 반복하며 결국 프로세서가 해석할 수 있는 정수 배열의 실행 파일로 만들어진다.</p>

<h1 id="4-컴퓨터-구조---하드웨어를-이해하기-위한-언어들을-배우자">4. 컴퓨터 구조 - 하드웨어를 이해하기 위한 언어들을 배우자</h1>
<p>프로세서는 0과 1만을 해석한다. 또한 간단한 정수들의 연산으로 명령어를 실행한다.</p>

<ol>
  <li>하드웨어가 하는 일을 이해하기 위해 정수표현과 산술연산을 배운다.</li>
</ol>

<p>컴파일러는 우리가 작성한 코드를 어셈블리 코드로 변경할 때 최적화를 진행한다.</p>

<ol>
  <li>어셈블리어를 배운다.</li>
</ol>

<p>어셈블러는 어셈블리 코드를 통해서 프로세서가 구축한 ISA를 기준으로 인스트럭션을 생성하여 인코딩한다.</p>

<ol>
  <li>인스트럭션을 배운다.</li>
</ol>
:ET