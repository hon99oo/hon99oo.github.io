I"<h1 id="boj">BOJ</h1>

<h2 id="dp-2193-이친수">DP 2193 이친수</h2>

<p><a href="https://www.acmicpc.net/problem/2193">문제로 이동!</a></p>

<h2 id="문제">문제</h2>

<p>0과 1로만 이루어진 수를 이진수라 한다. 이러한 이진수 중 특별한 성질을 갖는 것들이 있는데, 이들을 이친수(pinary number)라 한다. 이친수는 다음의 성질을 만족한다.</p>

<ol>
  <li>이친수는 0으로 시작하지 않는다.</li>
  <li>이친수에서는 1이 두 번 연속으로 나타나지 않는다. 즉, 11을 부분 문자열로 갖지 않는다.</li>
</ol>

<p>예를 들면 1, 10, 100, 101, 1000, 1001 등이 이친수가 된다. 하지만 0010101이나 101101은 각각 1, 2번 규칙에 위배되므로 이친수가 아니다.</p>

<p>N(1 ≤ N ≤ 90)이 주어졌을 때, N자리 이친수의 개수를 구하는 프로그램을 작성하시오.</p>

<h2 id="입력">입력</h2>

<p>첫째 줄에 N이 주어진다.</p>

<h2 id="예제-입력">예제 입력</h2>

<figure class="highlight"><pre><code class="language-python" data-lang="python">    <span class="s">"""
    case 1:
    입력
    3
    출력
    2

    case 2:
    입력
    6
    출력
    8
    """</span></code></pre></figure>

<h2 id="풀이">풀이</h2>

<p>DP 문제로 해당 문제의 규칙을 찾고 점화식을 세운 뒤 해당 점화식으로 코드를 작성하면 된다. 우선 규칙을 찾기 위해 약간의 노가다를 해보면 다음과 같은 규칙을 찾게 된다.</p>

<p>규칙 :</p>

<p>1 -&gt; 1개<br />
2 -&gt; 1개<br />
3 -&gt; 2개<br />
4 -&gt; 3개(1 + 2)<br />
5 -&gt; 5개(2 + 3)<br /></p>

<p>점화식 : f(n) = f(n-1) + f(n-2)</p>

<p>결국 피보나치수열과 같은 규칙이다.</p>

<h2 id="코드">코드</h2>

<figure class="highlight"><pre><code class="language-python" data-lang="python">    <span class="k">def</span> <span class="nf">solution</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
        <span class="n">dp</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">]</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
            <span class="n">dp</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">2</span><span class="p">])</span>
        <span class="k">return</span> <span class="n">dp</span><span class="p">[</span><span class="n">n</span><span class="p">]</span>
    
    
    <span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
        <span class="n">n</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
        <span class="k">print</span><span class="p">(</span><span class="n">solution</span><span class="p">(</span><span class="n">n</span><span class="p">))</span></code></pre></figure>
:ET